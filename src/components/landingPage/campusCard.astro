---
import Button from "../system/Button.astro";
import Text from "../system/Text.astro";
const { image=[], class: className, name, desc, link,ctaText,path,index,slideClass, videoId} = Astro.props as any

---

<div data-link={link}  class:list={['p-14 isolate max-md:w-full h-[504px] max-md:h-[48x0px]  max-md:mb-8 flex flex-col  max-md:p-m bg-cover bg-center overflow-hidden justify-center relative max-sm:justify-end max-sm:py-0' ,  className ]}
>
<div class="slide-container absolute inset-0">

{image.map((item: any,i: number) => {
  return (
    <div
      style={{
            backgroundImage: `url(${item.uri || item.slide[0].src})`,
            transition: '1s all ease-in-out',
            zIndex: -1
          }}
      data-class={slideClass}
      class:list={['w-full h-full absolute top-0 left-0 bg-no-repeat bg-cover', i == 0 ? 'opacity-1' : 'opacity-0','slide-item']}>
    </div>
    )
})}
</div>

  <div class="flex flex-col gap-r border-solid border-t-[8px] p-9 border-yellow w-fit bg-white max-sm:bg-opacity-[0.9] max-sm:p-[24px] relative z-40 mb-6 max-md:">
      <Text type="h3" class="text-neutral-dark-grey font-display font-bold text-[32px]">{name}</Text>
      <Text type="p" class="text-neutral-dark-grey max-w-[34ch]">{desc}</Text>
      <div class="pt-r max-sm:pt-r flex flex-row gap-4 max-sm:flex-col">
        <a href={`insight-${path}`}>
          <Button >
            {ctaText}
          </Button>
        </a>
        {videoId &&  (
          <div data-video-open={videoId}>
            <Button type="secondary">
              Watch Video
              <svg slot="icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM13.2313 8.72996C12.9466 8.53003 12.6242 8.32321 12.2903 8.1202C11.0034 7.33764 10.36 6.94636 9.7829 7.37957C9.2058 7.81278 9.15335 8.71968 9.04846 10.5335C9.01879 11.0464 9 11.5493 9 12.0001C9 12.4508 9.01879 12.9537 9.04846 13.4666C9.15335 15.2804 9.2058 16.1873 9.7829 16.6205C10.36 17.0537 11.0034 16.6625 12.2903 15.8799C12.6242 15.6769 12.9466 15.4701 13.2313 15.2702C13.5559 15.0423 13.909 14.7688 14.2651 14.4783C15.555 13.426 16.2 12.8999 16.2 12.0001C16.2 11.1002 15.555 10.5741 14.2651 9.52182C13.909 9.23134 13.5559 8.95785 13.2313 8.72996Z" fill="#006BB3"/>
                    </svg>
            </Button>
          </div>
        )}
      </div>
      </div>
  </div>
</div>

<script>
  let slideContainer = Array.from(document.querySelectorAll<HTMLElement>('.slide-container'));
  let slideshowIndex = new Array(slideContainer.length).fill(0);
  let interval: string | number | NodeJS.Timer | undefined;
  function moveSlides() {
    slideContainer.forEach((item,index) => {
      const items = Array.from(item.querySelectorAll<HTMLElement>('.slide-item'));
      items.forEach((item, i) => {
        if (i === slideshowIndex[index]) {
          item.style.opacity = '1';
          return;
        } else {
          item.style.opacity = '0'
        }
      })
      slideshowIndex[index] = (slideshowIndex[index] + 1) % items.length;
    })
  }
  const init = () => {
    slideContainer = Array.from(document.querySelectorAll<HTMLElement>('.slide-container'));
    slideshowIndex =  new Array(slideContainer.length).fill(0);
    clearInterval(interval)
    interval = setInterval(() => {
      moveSlides()
    }, 2000)
  }
  init()


  document.addEventListener('astro:beforeload', () => init());

  document.querySelectorAll('[data-link]').forEach(el => {
    el.addEventListener('click', () => {
      window.open(el.dataset.link, "_self"); 
    })
  })
</script>